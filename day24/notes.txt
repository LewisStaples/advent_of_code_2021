At end of part 0  of the code: 

z = (z_init*(25*(0 unless (0 unless (z_init%26 + 13) equals input_0) equals 0) + 1) + (input_0 + 5)*(0 unless (0 unless (z_init%26 + 13) equals input_0) equals 0)) 

Since z_init == 0:
z = (input_0 + 5)*(0 unless (0 unless 13 equals input_0) equals 0)) 

Since input_0 must be between 0 and 9, 13 cannot equal input_0.  Therefore:
z = (input_0 + 5)*(0 unless 0 equals 0)) 
z_0 = (input_0 + 5)


At end of part 1  of the code: 
z = (z_init*(25*(0 unless (0 unless (z_init%26 + 15) equals input_1) equals 0) + 1) + (input_1 + 14)*(0 unless (0 unless (z_init%26 + 15) equals input_1) equals 0))

(z_init%26 + 15) cannot equal input_1, because input_1 must be between 0 and 9.  Therefore:
z = (z_init*(25*(0 unless 0 equals 0) + 1) + (input_1 + 14)*(0 unless 0  equals 0))
z = (z_init*(25 + 1) + (input_1 + 14))
z_1 = 26*z_0 + input_1 + 14
z_1 = 26*(input_0 + 5) + input_1 + 14
z_1 = 26*input_0 + 26*5 + input_1 + 14
z_1 = 26*input_0 + input_1 + 144


At end of part 2  of the code: 
z_2 = (z_1*(25*(0 unless (0 unless (z_1%26 + 15) equals input_2) equals 0) + 1) + (input_2 + 15)*(0 unless (0 unless (z_1%26 + 15) equals input_2) equals 0))

(z_1%26 + 15) cannot equal input_2 (for reasons given in earlier steps).  Therefore:
z_2 = (z_1*(25 + 1) + (input_2 + 15))
z_2 = 26*z_1 + input_2 + 15
z_2 = 26*(26*input_0 + input_1 + 144) + input_2 + 15
z_2 = 26^2*input_0 + 26*input_1 + 26*144 + input_2 + 15
z_2 = 26^2*input_0 + 26*input_1 + input_2 + 3759


At end of part 3 of the code:
z_3 = (z_2*(25*(0 unless (0 unless (z_2%26 + 11) equals input_3) equals 0) + 1) + (input_3 + 16)*(0 unless (0 unless (z_2%26 + 11) equals input_3) equals 0))

(z_2%26 + 11) cannot equal input_3 (for reasons given in earlier steps).  Therefore:
z_3 = (z_2*(25 + 1) + (input_3 + 16))
z_3 = 26*z_2 + input_3 + 16
z_3 = 26*(26^2*input_0 + 26*input_1 + input_2 + 3759) + input_3 + 16
z_3 = 26^3*input_0 + 26^2*input_1 + 26*input_2 + 26*3759) + input_3 + 16
z_3 = 26^3*input_0 + 26^2*input_1 + 26*input_2 + input_3 + 97750


At end of part 4 of the code:
z_4 = (z_3/26*(25*(0 unless (0 unless (z_3%26 + -16) equals input_4) equals 0) + 1) + (input_4 + 8)*(0 unless (0 unless (z_3%26 + -16) equals input_4) equals 0))
(z_3%26 + -16) could equal input_4, so either it does or it doesn't.

If (z_3%26 + -16) != input_4:
z_4 = (z_3/26*(25 + 1) + (input_4 + 8))
z_4 = z_3 + input_4 + 8
z_4 = 26^3*input_0 + 26^2*input_1 + 26*input_2 + input_3 + 97750 + input_4 + 8
z_4 = 26^3*input_0 + 26^2*input_1 + 26*input_2 + input_3 + input_4 + 97758

If (z_3%26 + -16) == input_4:
z_4 = z_3/26
z_4 = (26^3*input_0 + 26^2*input_1 + 26*input_2 + input_3 + 97750) / 26

Deciding to make an assumption here.  Assuming equality to input_4 above keeps z_4 smaller than if unequal.  Since the eventual goal is for z_13 to equal zero, it will always be equal.


At end of part 5  of the code:
z_5 = (z_4/26*(25*(0 unless (0 unless (z_4%26 + -11) equals input_5) equals 0) + 1) + (input_5 + 9)*(0 unless (0 unless (z_4%26 + -11) equals input_5) equals 0))

Using assumption mentioned earlier, (z_4%26 + -11) == input_5, Therefore
z_5 = z_4/26
z_5 = (26^3*input_0 + 26^2*input_1 + 26*input_2 + input_3 + 97750) / 26^2



